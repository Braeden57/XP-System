<!-- Simple Styling for layout -->
<style>
  .members {
    width: 230px;
    display: inline-block;
  }
  .head {
    margin-bottom: 100px;
  }
  .teacher-container {
    position: absolute;
    width: 300px;
    left: 205px;
  }
  #pro-pic {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100px;
    display: block;
    border-radius: 50px;
    border: 1px solid black;
    margin:5px;
  }
  #user-pro-pic {
    position: absolute;
    top: 0px;
    left: 150px;
    width: 50px;
    height: 50px;
    display: block;
    border-radius: 50px;
    border: 1px solid black;
    margin:5px;
  }
  .buttons-container {
    position: absolute;
    width: 174px;
    height: 500px;
    top: 25px;
    right: 25px;
    border: solid #5b94f0 2px;
    border-style: solid;
    border-radius: 10px;
    background-color: rgba(112, 196, 255, .3);
  }
  #edit-btn {
    width: 127px;
    margin-left: 25px;
    margin-top: 10px;
  }
  #bug-btn {
    width: 127px;
    margin-left: 25px;
    margin-top: 10px;
  }
  #logout-btn {
    width: 127px;
    margin-left: 25px;
    margin-top: 10px;
  }
  #welcome {
    position: absolute;
    left: 115px;
    top: 60px;
  }
  h2 {
    font: 350 35px/1.5 Helvetica, Verdana, sans-serif;
    margin: 0;
    padding: 0;
  }
  ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
  }
  li {
    font: 200 20px/1.5 Helvetica, Verdana, sans-serif;
    border-bottom: 1px solid #ccc;
  }
  li:last-child {
    border: none;
  }
  li a {
    text-decoration: none;
    color: #000;
    display: block;
    width: 200px;
    -webkit-transition: font-size 0.3s ease, background-color 0.3s ease;
    -moz-transition: font-size 0.3s ease, background-color 0.3s ease;
    -o-transition: font-size 0.3s ease, background-color 0.3s ease;
    -ms-transition: font-size 0.3s ease, background-color 0.3s ease;
    transition: font-size 0.3s ease, background-color 0.3s ease;
  }
  li a:hover {
    font-size: 30px;
    background: #f6f6f6;
  }
</style>

<!-- Welcome Message & Profile Picture -->
<h1 class="mt-4">Teacher Dashboard</h1>
<div class='head'>
  <div>
    <div class="teacher-container">
      <p id='welcome' class="lead mb-3">Welcome <%= user.name %></p>
      <img id='pro-pic' src='data:image/<%=user.image.contentType%>;base64,
        <%=user.image.data.toString('base64')%>'>
    </div>
    <br>

    <div class="buttons-container">
      <!-- Action Buttons -->
      <a id='logout-btn' href="/users/logout" class="btn btn-outline-info btn-sm">Logout</a>
      <button id='edit-btn' onClick='passData()' class='btn btn-outline-info btn-sm'>Edit</button>
      <a id='bug-btn' href="https://github.com/Braeden57/XP-System/issues" target="_blank" class='btn btn-outline-info btn-sm'>Report Bug</a>
    </div>

    <!-- Passing user _id to edit page script -->
    <script>
      function passData() {
        let url = '/users/edit?name=' + encodeURIComponent('<%= user._id %>');

        document.location.href = url;
      }
    </script>
  </div>
</div>
<br>

<!-- Sets Variables for calculating users data -->
<div>
  <script>
    let xp;
    let currRank;
    let ranks = [
      {"Digital Noob": 0}, // index 0
      {"Digital Novice": 48}, // index 1
      {"Digital Novice II": 100}, // index 2
      {"Digital Amature": 148}, // index 3
      {"Digital Amature II": 200}, // index 4
      {"Digital Apprentice": 248}, // index 5
      {"Digital Apprentice II": 300}, // index 6
      {"Digital Journeyman": 396}, // index 7
      {"Digital Journeyman II": 476}, // index 8
      {"Digital Journeyman III": 532}, // index 9
      {"Digital Crafter": 580}, // index 10
      {"Expert Digital Crafter": 648}, // index 11
      {"Master Digital Crafter": 800} // index 12
    ]
    let indexes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12]

    // Students should't be on this page sooooo...
    console.log("Students Shouldnt be here");
  </script>

  <!-- Alert container -->
  <div id='div-container'></div>

  <!-- Modal -->
  <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel"</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <form action="/users/addXP" method="POST">
            <div>
              <input id='_id_add' type='text' name='_id_add' value='' style='display: none'></input>
              <input id="current_xp" type="text" name="current_xp" value="" style="display: none"></input>
            </div>
            <div>
              <p>Minimum: 1</p>
              <p>Maximum: 50</p>
            </div>
            <div class="form-group">
              <label for="amount">Amount</label>
              <input
                id="amount"
                name="amount"
                type="number"
                min="1"
                max="50"
                value=""
                class="form-control"
                >
            </div>
            <button type="submit" class="btn btn-primary">
              Add XP
            </button>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Creates unique ID
    function makeid(length) {
      var result = '';
      var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
      var charactersLength = characters.length;
      for ( var i = 0; i < length; i++ ) {
        result += characters.charAt(Math.floor(Math.random() * charactersLength));
      }
      return result;
    }

    // Create Div
    function createDiv(type, message) {
      let id = makeid(8);

      if (type == 'error') {
        document.getElementById('div-container').innerHTML += '<div id="new-div-'+id+'" style="display: none;" class="alert alert-warning alert-dismissible fade show" role="alert">';
      }
      if (type == 'message') {
        document.getElementById('div-container').innerHTML += '<div id="new-div-'+id+'" style="display: none;" class="alert alert-info alert-dismissible fade show" role="alert">';
      }
      document.getElementById('new-div-'+id).innerHTML += '<div id="message'+id+'">'+message+'</div>';
      document.getElementById('new-div-'+id).innerHTML += '<button id="close-btn-'+id+'" class="close" data-dismiss="alert" aria-label="Close"></button>';
      document.getElementById('close-btn-'+id).innerHTML += '<span aria-hidden="true">&times;</span>';
      document.getElementById('new-div-'+id).style.display = "block";
    }

    // // Check amount
    // function amountCheck(_id) {
    //   const amount = document.getElementById("amount").value;
    //   if (amount > 50) {
    //     createDiv('error', "Can't add more than 50 XP");
    //   }
    //   if (amount == 0 || amount < 0) {
    //     createDiv('error', "XP Must be more than 0");
    //   }
    //
    //   if (amount > 0 && amount < 50) {
    //
    //     createDiv('message', "Succesfully added XP");
    //   }
    // }

    // Pass name to Modal
    function passName(name, xp, member_id) {
      if (xp < 800) {
        document.getElementById("exampleModalLabel").innerHTML = "Give " + name + " XP";
        document.getElementById("_id_add").value = member_id;
        document.getElementById("current_xp").value = xp;
        $("#exampleModal").modal()
      }
      if (xp >= 800) {
        // Construct and show Max XP Alert
        message = name + ' has reached max XP!';
        createDiv('message', message);
      }
    }

    // Catching url Parameters
    window.onload = function () {
      const queryString = window.location.search;
      const urlParams = new URLSearchParams(queryString);
      const successRate = urlParams.get('successRate')
      if(successRate == 'addXP > 50') {
        createDiv('error', "Can't add more than 50 XP")
      }
      if(successRate == 'addXP <= 0') {
        createDiv('error', "XP Must be Greater than 0");
      }
      if(parseInt(successRate) > 0 && parseInt(successRate) < 50 || parseInt(successRate) == 50) {
        createDiv('message', "Gave " + successRate + "XP to a Student");
      }
    }
  </script>

  <!-- List of all site students (not teachers) -->
  <h2>Studen Members</h2>
  <div class='members'>
    <ul>
      <!-- Loops through all members -->
      <% members.forEach(function (member) { %>
        <!-- Identifies students -->
        <% if (member.role == "Student") { %>
          <!-- Creates User Button link -->
          <li><button class='btn btn-link mt-2' onclick='openProfile("<%= member.id %>")'><%= member.name %></button></li>

          <!-- Creates hidden Div with user specific Data -->
          <div style='display: none; position: relative;' data-role='page' id='<%= member._id %>'>
            <img id='user-pro-pic' src='data:image/<%=member.image.contentType%>;base64,<%=member.image.data.toString('base64')%>'>
            <p id='memberName' class='lead mb-3'><%= member.name %></p>
            <p class='lead mb-3'><%= member.email %></p>
            <br>
            <div>
              <p id='userRank-<%= member.id %>'></p>
              <p>XP: <%= member.xp %></p>

              <!-- Button trigger modal -->
              <button onClick='passName("<%= member.name %>", <%= member.xp %>, "<%= member._id %>")' type="button" class="btn btn-outline-info btn-sm">
                Add XP
              </button>

              <p><%= member.role %></p>
            </div>
            <br>

            <!-- Calculates user specific Rank -->
            <script>
              xp = <%= member.xp %>;
              // Get current rank
              if (xp == 0) {
                currRank = 'Digital Noob';
              } else {
                if (xp < 800 && xp > 0) {
                  for(var i = 0; i < ranks.length; i++) {
                    for (let rank in ranks[i]) {
                      let nextIndex = indexes[i];
                      for (let nextRank in ranks[nextIndex]) {
                        if (xp >= ranks[i][rank] && xp < ranks[nextIndex][nextRank]) {
                          currRank = rank;
                        }
                      }
                    }
                  }
                } else {
                  if (xp == 800) {
                      currRank = "Master Digital Crafter";
                  }
                }
              }

              // Display Rank
              document.getElementById('userRank-<%= member.id %>').innerHTML = currRank;
            </script>
          </div>
        <% } %>
      <% }) %>
    </ul>
  </div>
</div>

<!-- Script for show/hide user profile data -->
<script>
  function openProfile(id) {
    let state = document.getElementById(id).style.display;
    if (state == "block") {
      document.getElementById(id).style.display = 'none';
    } else {
      document.getElementById(id).style.display = 'block';
    }
  }
</script>
